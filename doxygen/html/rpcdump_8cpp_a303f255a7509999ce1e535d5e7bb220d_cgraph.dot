digraph "bip38encrypt"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node89 [label="bip38encrypt",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node89 -> Node90 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node90 [label="EnsureWalletIsUnlocked",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rpcdump_8cpp.html#a8f837f6d506b9719cef93188db00fd3c"];
  Node89 -> Node91 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node91 [label="CBase58Data::SetString",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_base58_data.html#a250fa3bc97d03c7d87de5485c8b49b57"];
  Node91 -> Node92 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node92 [label="DecodeBase58Check",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$base58_8cpp.html#ae2dc7ad63e243509e0871ec4a5890678",tooltip="Decode a base58-encoded string (psz) that includes a checksum into a byte vector (vchRet), return true if decoding is successful. "];
  Node92 -> Node93 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node93 [label="DecodeBase58",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$base58_8cpp.html#a0f74d1d6e7e982cad4b0e538acea4538",tooltip="Decode a base58-encoded string (psz) into a byte vector (vchRet). "];
  Node92 -> Node94 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node94 [label="Hash",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$hash_8h.html#a12c5e981d7f5f2850027fd5e932eff61",tooltip="Compute the 256-bit hash of a std::string. "];
  Node92 -> Node95 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node95 [label="base_uint::end",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#a76539ef6be800bc02e4038f457a4f74a"];
  Node91 -> Node96 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node96 [label="memcpy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$glibc__compat_8cpp.html#a0f46826ab0466591e136db24394923cf"];
  Node96 -> Node97 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node97 [label="memmove",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$glibc__compat_8cpp.html#a9778d49e9029dd75bc53ecbbf9f5e9a1"];
  Node89 -> Node98 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node98 [label="JSONRPCError",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rpcprotocol_8cpp.html#a17b1bb111ab339efc951929834766039"];
  Node89 -> Node99 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node99 [label="CBitcoinAddress::GetKeyID",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_bitcoin_address.html#af3d7c4547803b09144fc040320f687dd"];
  Node99 -> Node100 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node100 [label="CBitcoinAddress::IsValid",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_bitcoin_address.html#ab39907ce6895062a8f8bf585270ef13b"];
  Node100 -> Node101 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node101 [label="Params",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$chainparams_8cpp.html#ace5c5b706d71a324a417dd2db394fd4a",tooltip="Return the currently selected parameters. "];
  Node99 -> Node101 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node99 -> Node96 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node89 -> Node102 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node102 [label="CCryptoKeyStore::GetKey",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_crypto_key_store.html#af46ec271fffb65a113702ba40a3738c8"];
  Node102 -> Node103 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node103 [label="CCryptoKeyStore::IsCrypted",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_crypto_key_store.html#acc8fed44366c98fb481333ca6e867088"];
  Node102 -> Node104 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node104 [label="CBasicKeyStore::GetKey",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_basic_key_store.html#a69328ee642e4234922356f59876e956d"];
  Node102 -> Node105 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node105 [label="DecryptSecret",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$crypter_8cpp.html#aded00aa7498a7485a00e77a20856b3e4"];
  Node105 -> Node96 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node105 -> Node106 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node106 [label="CCrypter::SetKey",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_crypter.html#a0d948dd4796e2420e1dd9c1ddbf7974e"];
  Node106 -> Node96 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node105 -> Node107 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node107 [label="CCrypter::Decrypt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_crypter.html#a4dbabed4975d4435d22c76deac43df7f"];
  Node102 -> Node108 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node108 [label="CPubKey::GetHash",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_pub_key.html#ab1aaa3f6085a3e9bc034d3e1269d870d",tooltip="Get the 256-bit hash of this public key. "];
  Node108 -> Node94 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node108 -> Node109 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node109 [label="CPubKey::size",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_pub_key.html#a6bb28fcf0a5f799c69f5b7269363b309",tooltip="Simple read-only vector-like interface to the pubkey data. "];
  Node109 -> Node110 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node110 [label="CPubKey::GetLen",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_pub_key.html#a7dc71b3f037c84268dc22de97d7b65fb",tooltip="Compute the length of a pubkey with a given first byte. "];
  Node102 -> Node111 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node111 [label="CKey::Set",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_key.html#aaa13d5f08456bba094210c5eeabf64c8",tooltip="Initialize using begin and end iterators to byte data. "];
  Node111 -> Node112 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node112 [label="CKey::Check",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_key.html#acec869bc75fa8f4d619ab025d367a97c",tooltip="Check whether the 32-byte array pointed to be vch is valid keydata. "];
  Node112 -> Node113 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node113 [label="eccrypto::Check",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$namespaceeccrypto.html#a231bdcb32521375b68fbdaf0d952cfd0"];
  Node111 -> Node96 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node102 -> Node114 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node114 [label="CPubKey::IsCompressed",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_pub_key.html#a25f8b70340ad20ddab0f80ec4cee9396",tooltip="Check whether this is a compressed public key. "];
  Node114 -> Node109 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node89 -> Node115 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node115 [label="CKey::GetPrivKey_256",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_key.html#a2984be4b20b4873c440e846d8e5594e0"];
  Node89 -> Node116 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node116 [label="BIP38_Encrypt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$bip38_8cpp.html#a510b9177c784d15ff57c01b12ccfa674"];
  Node116 -> Node117 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node117 [label="AddressToBip38Hash",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$bip38_8cpp.html#a316d78ad4929a28e63f746aa5da410aa"];
  Node117 -> Node94 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node117 -> Node118 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node118 [label="base_uint::begin",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#aaa32054bf4e8fbb31d54a75f6065174d"];
  Node117 -> Node119 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node119 [label="HexStr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$utilstrencodings_8h.html#ace13a819ca4e98c22847d26b3b357e75"];
  Node116 -> Node120 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node120 [label="ReverseEndianString",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$utilstrencodings_8h.html#a699915db9972f1502ab6867bb78d8e01",tooltip="Reverse the endianess of a string. "];
  Node116 -> Node121 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node121 [label="base_uint::Get64",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#aae5336be1799bd2debf74efb1d2cc542"];
  Node116 -> Node122 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node122 [label="scrypt_hash",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$hash_8cpp.html#ac1ac2ae4cd8d6d9b314d6817e20ac297"];
  Node122 -> Node123 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node123 [label="scrypt",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$scrypt_8cpp.html#a60889112ef65bb6f6c43075746696313"];
  Node123 -> Node124 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node124 [label="PBKDF2_SHA256",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$scrypt_8cpp.html#aee9e3622e2f69c23a5891ddc86fd1228",tooltip="PBKDF2_SHA256(passwd, passwdlen, salt, saltlen, c, buf, dkLen): Compute PBKDF2(passwd, salt, c, dkLen) using HMAC-SHA256 as the PRF, and write the output to buf. "];
  Node123 -> Node125 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node125 [label="SMix",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$scrypt_8cpp.html#aa7931df6bf0ca37533c41dc6f792e9f1"];
  Node116 -> Node126 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node126 [label="base_uint::ToString",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classbase__uint.html#acccba4d9d51a0c36261718ca0cbb293b"];
  Node116 -> Node118 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node116 -> Node94 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node116 -> Node127 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node127 [label="EncodeBase58",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$base58_8cpp.html#a8d6f0e9d5df175b4966dcede31dc90ad",tooltip="Why base-58 instead of standard base-64 encoding? "];
  Node89 -> Node128 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node128 [label="CKey::IsCompressed",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_key.html#a96b017433a65335775cf3807d73f85ce",tooltip="Check whether the public key corresponding to this private key is (to be) compressed. "];
}
