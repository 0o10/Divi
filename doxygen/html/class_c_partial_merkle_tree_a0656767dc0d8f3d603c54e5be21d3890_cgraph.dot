digraph "CPartialMerkleTree::CPartialMerkleTree"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="CPartialMerkleTree\l::CPartialMerkleTree",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node0 -> Node1 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="CPartialMerkleTree\l::CalcTreeWidth",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_partial_merkle_tree.html#a7dd0288d62321fb5aa2c27a3372ee8fe",tooltip="helper function to efficiently calculate the number of nodes at given height in the merkle tree ..."];
  Node0 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="CPartialMerkleTree\l::TraverseAndBuild",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_c_partial_merkle_tree.html#a62bdcaf5b5ee6c6327ef67fb027a5fef",tooltip="recursive function that traverses tree nodes, storing the data as bits and hashes ..."];
}
